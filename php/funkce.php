<?php  /** * Odstarňuje zpětné uvozovky z řetězce, nebo pole řetězců. * @param mix $data řetězec nebo pole z kterého chceme odstarnit zpětná lomítka * @return mix $data upravený řetězec nebo pole řetězců */function odstran_lomitka($data){ 	if(get_magic_quotes_gpc()){		if(is_array($data)){			array_map('odstran_lomitka', $data);				}		else{			stripslashes($data);		}	}	return $data;}/** * Odstraňuje bílé znaky * @param type $data etězec nebo pole z kterého chceme odstarnit bílé znaky * @return type $data upravený řetězec nebo pole řetězců */function odstran_odsazeni($data){	if(is_array($data)){		array_map('odstran_odsazeni', $data);	}	else{		$nahradit = array("\r" => "", "\n" => "");		$data = strtr($data, $nahradit);	}	return $data;}/** *  * @param type $relativni_cesta cesta relativní k souboru (musí začínat lomítkem v kořenovém adresáři stránek) * @return type webová adresa souboru */function uni_adresa ($relativni_cesta) {	return "http://" . $_SERVER["SERVER_NAME"] . ":" . $_SERVER["SERVER_PORT"] . $relativni_cesta;}function uni_cesta_na_uni_adresu($uni_cesta){	$relativni_cesta = substr($uni_cesta, strlen($_SERVER['DOCUMENT_ROOT']));	return uni_adresa($relativni_cesta);}/** * Funkce pro vztvoření časové známky pro soubor * @param type $soubor název souboru * @return type časová známka */function parametr_casove_znamky ($soubor) {	return "?" . urlencode(strftime("%m/%d/%Y %H:%M:%S", filemtime($soubor)));}/** * Vrátí příponu souboru * @param type $soubor soubor nebo cesta k němu * @return type řetězec s příponou souboru */function pripona($soubor){	return pathinfo($soubor, PATHINFO_EXTENSION);}/*** Přesměruje na poslední stranu, pokud je hodnota poslední strany neznámá, přesměruje na index*/function posledni_strana0(){	if(!isset($_SERVER["HTTP_REFERER"])){		header("Location: index.php");	}	else{		header("Location: " . $_SERVER["HTTP_REFERER"]);	}	exit;}/** * Přesměruje na poslední stranu s chybovým parametrem * @param string $chyba chybová zpráva */function posledni_strana1($chyba){	$adresa = explode("?", $_SERVER[HTTP_REFERER]); 	header("Location: $adresa[0]?$chyba");	exit;}/** * Přesměruje na poslední stranu s chybovým parametrem, navíc zachová původní parametr * @param string $chyba chybová zpráva * @param string $odkud původní parametr stránky */function posledni_strana2($chyba, $odkud){	$adresa = explode("?", $_SERVER[HTTP_REFERER]); 	header("Location: $adresa[0]?$odkud&$chyba");	exit;}/** * refresh strany s chybovým parametrem * @param string $zprava chybová zpráva * @param string $odkud původní parametr */function tato_strana2($zprava, $odkud){	$adresa = explode("?", $_SERVER[PHP_SELF]);	header("Location: $adresa[0]?$odkud&$zprava");	exit;}/** * ze zadaného dne, měsíce a roku utvoří datum a zkontroluje zdali existuje * @param int $den den * @param int $mesic měsíc * @param int $rok rok * @return DateTime|boolean datum nebo false pokud datum neexistuje */function datum($den, $mesic, $rok){	if(checkdate($mesic, $den, $rok)){		$datum = new DateTime($den . "-" . $mesic . "-" . $rok);		return $datum;	}	else{		return FALSE;	}	}/** * Odešle mail na všechny zadané adresy * @param type $adresy pole adres * @param type $predmet předmět mailu * @param type $text zpráva * @param string $hlavicky hlavičky mailu */function odesli_mail($adresy, $predmet, $text, $hlavicky){	foreach ($adresy as $adresa){		$hlavicky .= "From: Vlocka\r\n";		mail($adresa, $predmet, $text, $hlavicky);	}}?>